// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3 (swiftlang-1200.0.29.2 clang-1200.0.30.1)
// swift-module-flags: -target armv7-apple-ios9.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name IVNetwork
import AFNetworking
import Foundation
@_exported import IVNetwork
import IoTVideo
import Swift
public enum IVNetworkRequestType : Swift.String {
  case GET
  case POST
  case PUT
  public typealias RawValue = Swift.String
  public init?(rawValue: Swift.String)
  public var rawValue: Swift.String {
    get
  }
}
@objc @_inheritsConvenienceInitializers public class IVNetwork : AFNetworking.AFHTTPSessionManager {
  @objc(shareInstance) public static let shared: IVNetwork.IVNetwork
  @available(*, unavailable, message: "please use shareInstance instead")
  @objc override dynamic public func copy() -> Any
  @available(*, unavailable, message: "please use shareInstance instead")
  @objc override dynamic public func mutableCopy() -> Any
  @objc override dynamic public func urlSession(_ session: Foundation.URLSession, didReceive challenge: Foundation.URLAuthenticationChallenge, completionHandler: @escaping (Foundation.URLSession.AuthChallengeDisposition, Foundation.URLCredential?) -> Swift.Void)
  @objc deinit
  @objc override dynamic public init(baseURL url: Foundation.URL?, sessionConfiguration configuration: Foundation.URLSessionConfiguration?)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
extension IVNetwork {
  @available(swift 10.0)
  @objc dynamic public func request(methodType: Swift.String, urlString: Swift.String?, params: [Swift.String : Any]?, response: IoTVideo.IVNetworkResponseHandler?)
  public func request(methodType: IVNetwork.IVNetworkRequestType, urlString: Swift.String?, params: [Swift.String : Any]?, host: Swift.String? = nil, response: IoTVideo.IVNetworkResponseHandler?)
}
extension IVNetwork.IVNetworkRequestType : Swift.Equatable {}
extension IVNetwork.IVNetworkRequestType : Swift.Hashable {}
extension IVNetwork.IVNetworkRequestType : Swift.RawRepresentable {}
